import { ToastService } from '../../providers/util/toast.service';import { AlertService } from '../../providers/util/alert.service';import { NavController, App } from 'ionic-angular';import { Component } from '@angular/core';import { Camera } from '@ionic-native/camera';import { Wakanda } from '../../app/wakanda.service';@Component({  selector: 'page-settings',  templateUrl: 'settings.html',    providers: [Wakanda]})export class SettingsPage {  profile_picture: string;  profileRef: any;  errorMessage: any;  placeholder_picture = "http://api.adorable.io/avatar/200/bob";  storedUser: any;  enableNotifications = true;  language: any;  currency: any;  paymentMethod: any;  languages = ['English', 'Portuguese', 'French'];  paymentMethods = ['Paypal', 'Credit Card'];  currencies = ['USD', 'BRL', 'EUR'];  user = {    name: 'Marty Mcfly',    imageUrl: 'assets/img/avatar/marty-avatar.png'  }  constructor(private navCtrl: NavController, public alertService: AlertService,    public toastCtrl: ToastService, public wakanda: Wakanda,  public app: App, public camera: Camera) {    	    	    	this.storedUser = localStorage.getItem('user');				if (this.storedUser) {		  		var that = this;			    this.wakanda.getCatalog().then(function (ds) {								ds['User'].query( { filter: "ID = :1" , params: [that.storedUser]}).then(res => {		    					    		if (res.entities[0].photo.uri) { 					    		 that.user.imageUrl = res.entities[0].photo.uri;				    		 that.user.name = res.entities[0].fullName;				    	}			    	});						});				}    	    	  }  toggleNotifications() {    if (this.enableNotifications) {      this.toastCtrl.create("Notifications enabled.");    } else {      this.toastCtrl.create("Notifications disabled.");    }  }  updateImage(value) {    this.profile_picture = 'data:image/jpeg;base64,' + value.val();  }  updateProfileImage() {    this.camera.getPicture({      quality: 50,      allowEdit: true,      cameraDirection: this.camera.Direction.FRONT,      destinationType: this.camera.DestinationType.DATA_URL    }).then((imageData) => {      this.user.imageUrl = imageData;    }, (err) => {      this.toastCtrl.create("Error: " + err);    });  }  logOut() {    this.alertService.presentAlertWithCallback("Are you sure?",      "This will log you out of this application.").then((yes) => {        if (yes) {          this.toastCtrl.create("Logged out of the application");        }      });  }}