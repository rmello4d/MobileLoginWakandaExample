import { Component } from '@angular/core';import { NavController, MenuController, ModalController } from 'ionic-angular';import { Wakanda } from '../../app/wakanda.service';import { HintModalPage } from './hint-modal/hint-modal';import { ChartsPage } from './charts/charts';@Component({  selector: 'page-home',  templateUrl: 'home.html',   providers:[Wakanda]})export class HomePage {  drawerOptions: any;  cards: Array<{imageUrl: string, title: string, 				description: string, ID: number}>;				  data: any;     constructor(	public navCtrl: NavController, 				public wakanda: Wakanda, 				public menuCtrl: MenuController,				public modalCtrl: ModalController) {        this.drawerOptions = {      handleHeight: 50,      thresholdFromBottom: 200,      thresholdFromTop: 200,      bounceBack: true    };	    this.cards = [];    /*    this.wakanda.getCatalog()    	.then(ds => {	    	ds.Table.query()	    		.then(res => {		    		for(let entity of res['entities']) {			            this.cards.push({			              imageUrl: entity[''].uri,			              title: entity[''], 			              description: entity[''], 			              ID : entity['ID']			        	});		        	}	    	});     });	    */       	this.cards = [{		imageUrl: '',		title: 'demo',		description:'my demo',		ID:123	}];	this.menuCtrl.enable(true, "menu-avatar");  }  cardTapped(card) { //open another view with details	   	  	//this.wakanda.getCatalog().then(ds => {});		 	   	//});  }  first(card) { //open panel with details  	//get the data from the Wakanda DB into the result variable, 	// then pass the values to the params     /*  	 this.wakanda.getCatalog().then(ds => {	 	      	    ds['table'](card.imageUrl).then(result => {     	  	    	result = JSON.parse(result);  	    });	 	  	 });    	 */  	    	  	    		let myModal = this.modalCtrl.create(HintModalPage, {		'params': {			page:{				title : 'Test1', //result.xxx				text  : 'Test1'  //result.yyy			},			description:{				text : 'hello1', 				label : 'value1',				value : 123									}, 			grid: {				text: '', 				elems:['toto1', 'tata1', 'titi1']			}		}	});	myModal.present();          }  second(card) { //open a graphic      this.navCtrl.push(ChartsPage, {      	      	'params': {			title : card.title, 			labels : ['high', 'low', 'medium'], 			values : [ 10, 12, 15]      	}      })  }   third(card) { //open panel with details 	    		let myModal = this.modalCtrl.create(HintModalPage, {		'params': {			page:{				title : 'Test2', 				text  : 'Test2'			},			description:{				text : 'hello2', 				label : 'value2',				value : 123									}, 			grid: {				text: '', 				elems:['toto2', 'tata2', 'titi2']			}		}	});	myModal.present();   }    ionViewDidLoad() {  }}