import { CameraProvider } from '../../providers/util/camera.provider';import { Component } from '@angular/core';import { NavController, MenuController, Platform, ActionSheetController, LoadingController } from 'ionic-angular';import { Wakanda } from '../../app/wakanda.service';@Component({  selector: 'page-get-image',  templateUrl: 'get-image.html',  providers: [Wakanda]})export class GetImagePage {  placeholder = 'assets/img/avatar/girl-avatar.png';  profilePicture: any;  storedUser: any;  constructor(	public navCtrl: NavController, public wakanda: Wakanda, 				public menuCtrl: MenuController, public actionsheetCtrl: ActionSheetController,				public cameraProvider: CameraProvider, public platform: Platform, 				public loadingCtrl: LoadingController) {      	this.menuCtrl.close(); 	    this.storedUser = localStorage.getItem('user');				if (this.storedUser) {		  		var that = this;			    this.wakanda.getCatalog().then(function (ds) {								ds['User'].query( { filter: "ID = :1" , params: [that.storedUser]}).then(res => {		    					    		if (res.entities[0].photo.uri) { 					    		 that.profilePicture = res.entities[0].photo.uri;				    	}			    	});						});				}          	    }    changePicture() {    let loading = this.loadingCtrl.create();	let storedUser = localStorage.getItem('user');		    let actionSheet = this.actionsheetCtrl.create({      title: 'Upload picture',      cssClass: 'action-sheets-basic-page',      buttons: [        {          text: 'Camera',          icon: !this.platform.is('ios') ? 'camera' : null,          handler: () => {            loading.present();            return this.cameraProvider.getPictureFromCamera().then(picture => {              if (picture) {                this.profilePicture = picture;						    	              }              loading.dismiss();            }, error => {              alert(error);            });          }        },        {          text: !this.platform.is('ios') ? 'Gallery' : 'Camera Roll',          icon: !this.platform.is('ios') ? 'image' : null,          handler: () => {            loading.present();            return this.cameraProvider.getPictureFromPhotoLibrary().then(picture => {              if (picture) {                this.profilePicture = picture;                              }              loading.dismiss();            }, error => {              alert(error);            });          }        },        {          text: 'Cancel',          icon: !this.platform.is('ios') ? 'close' : null,          role: 'destructive',          handler: () => {            console.log('The user has cancelled the interaction.');          }        }      ]    });    return actionSheet.present();  }}